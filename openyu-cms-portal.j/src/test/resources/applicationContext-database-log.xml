<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
             http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- bonecp -->
	<bean
		id="logDataSourceTarget"
		class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${log.bonecp.driverClass}</value>
		</property>
		<property name="jdbcUrl">
			<value>${log.bonecp.jdbcUrl}</value>
		</property>
		<property name="username">
			<value>${log.bonecp.username}</value>
		</property>
		<property name="password">
			<value>${log.bonecp.password}</value>
		</property>
		<property name="initSQL">
			<value>${log.bonecp.initSQL}</value>
		</property>
		<property name="idleConnectionTestPeriodInMinutes">
			<value>${log.bonecp.idleConnectionTestPeriodInMinutes}</value>
		</property>
		<property name="idleMaxAgeInMinutes">
			<value>${log.bonecp.idleMaxAgeInMinutes}</value>
		</property>
		<property name="maxConnectionsPerPartition">
			<value>${log.bonecp.maxConnectionsPerPartition}</value>
		</property>
		<property name="minConnectionsPerPartition">
			<value>${log.bonecp.minConnectionsPerPartition}</value>
		</property>
		<property name="partitionCount">
			<value>${log.bonecp.partitionCount}</value>
		</property>
		<property name="acquireIncrement">
			<value>${log.bonecp.acquireIncrement}</value>
		</property>
		<property name="statementsCacheSize">
			<value>${log.bonecp.statementsCacheSize}</value>
		</property>
		<!-- bonecp 0.8 deprecated
		<property name="releaseHelperThreads">
			<value>${log.bonecp.releaseHelperThreads}</value>
		</property>
		-->
		<property name="connectionTimeoutInMs">
			<value>${log.bonecp.connectionTimeoutInMs}</value>
		</property>
	</bean>

	<bean
		id="logDataSource"
		class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy"
		p:targetDataSource-ref="logDataSourceTarget" />

	<bean
		id="logSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	    <!-- hibernate 3 
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		-->
		<!--
		<property name="configLocation" value="hibernate.cfg.xml" /> 
		-->
		<property
			name="dataSource"
			ref="logDataSource" />
		<property name="hibernateProperties">
			<props>
				<!-- jdbc.properties -->
				<!-- hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect -->

				<prop key="hibernate.dialect">${log.bonecp.hibernate.dialect}</prop>
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop> -->
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop> -->

				<prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>

				<prop key="hibernate.generate_statistics">${log.bonecp.hibernate.generate_statistics}</prop>
				<prop key="hibernate.show_sql">${log.bonecp.hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${log.bonecp.hibernate.format_sql}</prop>

				<!--  hibernate 3  
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider
				</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider
				</prop>
				-->

				<!-- hibernate 4 
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
				-->

				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<prop key="net.sf.ehcache.configurationResourceName">/ehcache-log.xml</prop>

				<prop key="hibernate.bytecode.provider">cglib</prop>
				<prop key="hibernate.jdbc.batch_size">${log.bonecp.hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>

				<!-- no jta -->
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory
				</prop>
				<!-- jta
				<prop key="hibernate.transaction.factory_class">hibernate.transaction.factory_class=org.hibernate.transaction.JTATransactionFactory 
				</prop> 
				-->

				<prop key="hibernate.search.default.directory_provider">filesystem</prop>
				<prop key="hibernate.search.default.indexBase">${log.bonecp.hibernate.search.default.indexBase}
				</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
			</props>
		</property>
		<!-- hibernate 3  
		<property name="lobHandler">
			<ref bean="logLobHandler" />
		</property>
		-->
		<property name="packagesToScan">
			<list>
				<value>org.openyu.cms.template.log.impl</value>
				<value>org.openyu.cms.resource.log.impl</value>
				<value>org.openyu.cms.keyword.log.impl</value>
				<value>org.openyu.cms.sensitivity.log.impl</value>
				<value>org.openyu.cms.topic.log.impl</value>
				<value>org.openyu.cms.tag.log.impl</value>
				<value>org.openyu.cms.vote.log.impl</value>
				<value>org.openyu.cms.guestbookType.log.impl</value>
				<value>org.openyu.cms.guestbook.log.impl</value>
				<value>org.openyu.cms.adSpace.log.impl</value>
				<value>org.openyu.cms.ad.log.impl</value>
				<value>org.openyu.cms.friend.log.impl</value>
				<value>org.openyu.cms.friendType.log.impl</value>
			</list>
		</property>
	</bean>

	<bean
		id="logHibernateTemplate"
		class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property
			name="sessionFactory"
			ref="logSessionFactory"></property>
	</bean>	

	<!--  
	<bean id="logLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true" />
	-->	

	<!--
	<bean id="logHibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
		<property name="sessionFactory">
			<ref bean="logSessionFactory" />
		</property>
	</bean>
	-->

	<!-- Hibernate transaction manager -->
	<bean
		id="logTxManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="logSessionFactory" />

	<tx:advice
		id="logTxAdvice"
		transaction-manager="logTxManager">
		<tx:attributes>
			<tx:method
				name="find*"
				read-only="true" />
			<tx:method
				name="is*"
				read-only="true" />
			<tx:method
				name="search*"
				read-only="true" />

			<tx:method
				name="insert*"
				rollback-for="java.lang.Exception"
				propagation="REQUIRED"
				read-only="false" />
			<tx:method
				name="update*"
				rollback-for="java.lang.Exception"
				propagation="REQUIRED"
				read-only="false" />
			<tx:method
				name="delete*"
				rollback-for="java.lang.Exception"
				propagation="REQUIRED"
				read-only="false" />
			<tx:method
				name="save*"
				rollback-for="java.lang.Exception"
				propagation="REQUIRED"
				read-only="false" />
			<tx:method
				name="record*"
				rollback-for="java.lang.Exception"
				propagation="REQUIRED"
				read-only="false" />
		</tx:attributes>
	</tx:advice>

	<tx:annotation-driven transaction-manager="logTxManager" />

	<!-- log dao supporter 
	<bean id="logOjDaoSupporter" class="org.openyu.commons.dao.supporter.OjDaoSupporter"
		p:sessionFactory-ref="logSessionFactory" />
	-->

	<bean
		id="logOjDaoSupporter"
		class="org.openyu.commons.dao.supporter.OjDaoSupporter"
		p:hibernateTemplate-ref="logHibernateTemplate" />

	<!--
	<bean id="logJdbcDaoSupporter" class="org.openyu.commons.dao.supporter.JdbcDaoSupporter">
		<property name="dataSource">
			<ref bean="logDataSource" />
		</property>
	</bean>
	-->

	<bean
		id="appLogDaoSupporter"
		class="org.openyu.cms.app.dao.supporter.AppLogDaoSupporter"
		parent="logOjDaoSupporter" />

	<!-- queue service -->
	<bean
		id="logQueueService"
		class="org.openyu.commons.service.impl.QueueServiceImpl"
		parent="baseServiceSupporter">
		<property name="threadService">
			<ref bean="threadService" />
		</property>
		<property name="ojDao">
			<ref bean="logOjDaoSupporter" />
		</property>
	</bean>

	<!-- log service supporter -->
	<bean
		id="baseLogServiceSupporter"
		class="org.openyu.commons.service.supporter.BaseLogServiceSupporter"
		parent="baseServiceSupporter">
	</bean>

	<bean
		id="appLogServiceSupporter"
		class="org.openyu.cms.app.service.supporter.AppLogServiceSupporter"
		parent="baseLogServiceSupporter">
	</bean>
</beans>
